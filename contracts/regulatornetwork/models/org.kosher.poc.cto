/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.kosher.poc

participant CONSUMER identified by CONSUMERId
{
  o String CONSUMERId
}

participant REGULATOR identified by REGULATORId
{
  o String REGULATORId
  o String REGULATORName
  o String REGULATORaddress
}

participant Holder identified by HolderId {
    o String HolderId /*is the participant Id*/
    o String HolderName
    o HolderType HolderType
    o String address
  }
/* ===============
* A Mashgiach participant
*/
participant KashrutMashgiach identified by HashgachaId {
  --> REGULATOR KashrutAthhorityOwner
  o String HashgachaName
  o String HashgachaId
  o DateTime SignitoryNominationGrantedTime
  o DateTime SignitoryExpierOn
  }

/*================
* A Product asset
*/
asset Product identified by UniqeProductHolderID {
    o String UniqeProductHolderID
    o String ProductDescriptorId
    o String Name
    o String BatchId
    o String description
    o Double amount 
    --> Product[] Parents optional
    --> Product[] Childrens optional
    o ProductType PType
    --> Holder owner
    --> KashrutCertificat Linkedcert optional
  }
/*==================
change product holding
*/
transaction Trade{
   // --> Holder fromOwner
    --> Product commodity
    o Double TransferedAmount 
    o DateTime TransactionTimestemp
    --> Holder newOwner
}
/*==================
merge products holding
*/
transaction MergeINTOProduct{
    --> Product[] commodity 
    o Product NewProductDetails
    o DateTime TransactionTimestemp
   // --> Holder newOwner
}
/**
 * An enumerated types
 */
enum ProductType {
  o DAIRY
  o BEEF
  o PARVE
}

enum HolderType {
  o PRODUCER
  o SUPLIER
  o RETAILER
  o BRAND
  o CONSUMER
  o TRANSPORTAGENT
}

asset HistorianRecord identified by transactionId {
  o String transactionId
    --> Holder[] FromOwner
    --> Holder ToOwner
    --> Product[] commodity
  o Double TransferedAmount optional
  o String BatchId
  o String ProductKashrutStatus optional
  
}

/*================
 * A Kosher certification (contract) asset.
 */
asset KashrutCertificat identified by Cid {
  o String Cid
  --> REGULATOR KashrutAthhorityOwner
  --> Holder CRTHolder
  --> Product CRTProduct 
  --> KashrutMashgiach GrantedBy
  o DateTime GrantedTime
  o DateTime ExpierOn
  o CertificateStatus STATUS
  o String CertificateConditions
  --> HistorianRecord [] linkedRecords optional
  }

/*================*/

enum CertificateStatus {
  o VALID
  o EXPIERED
  o REVOKE
  o PENDING
}
/*===Certification transactions====*/
transaction InvokeNewKosherCertificate
{
   --> KashrutMashgiach GrantedBy
   --> Product CRTProduct
  o DateTime TransactionTimestemp
  o DateTime ExpieryTimestemp
  o CertificateStatus STATUS
  o String CertificateConditions
}



transaction RevokeKosherCertificate
{
  --> KashrutCertificat CertToRevoke
  o DateTime TransactionTimestemp
}
transaction RevokeProductkashrut
{}

transaction PRDQuery
{
 // --> Product PRD
}

event BasicEvent {
//  --> Product PRD
 
}

transaction StartDemo2 { 
}